{"version":3,"sources":["components/card/index.js","components/card-list/index.js","components/search-box/index.js","App.js","reportWebVitals.js","index.js"],"names":["index","robot","className","src","id","name","email","robots","map","el","search","onSearch","type","placeholder","onChange","App","onSearchChanged","event","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAYeA,EAVD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,4BACR,6BAAKH,EAAMI,OACX,4BAAIJ,EAAMK,YCMDN,EAVD,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACb,OACI,qBAAKL,UAAU,YAAf,SACKK,EAAOC,KAAI,SAAAC,GAAE,OACV,cAAC,EAAD,CAAkBR,MAAOQ,GAAdA,EAAGL,UCMfJ,G,MAXD,SAAC,GAAuB,EAAtBU,OAAuB,IAAfC,EAAc,EAAdA,SACpB,OACI,uBACAT,UAAU,aACVU,KAAK,OACLC,YAAY,kBACZC,SAAUH,MCiCHI,E,kDApCb,aAAe,IAAD,8BACZ,gBAQFC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAQ,CACXf,OAAQ,GACRY,YAAa,IALH,E,qDAcd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEX,OAAQoB,S,oBAG5C,WAAU,IAAD,EACyBC,KAAKN,MAA7Bf,EADD,EACCA,OAAQY,EADT,EACSA,YAEVU,EAAiBtB,EAAOuB,QAAO,SAACrB,GAAD,OACnCA,EAAGJ,KAAK0B,cAAcC,SAASb,MAEjC,OACE,sBAAKjB,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CAAWS,SAAUiB,KAAKZ,kBAC1B,cAAC,EAAD,CAAUT,OAAQsB,W,GA/BRI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.418975f6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nconst index = ({ robot }) => {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${robot.id}?set=set2&size=180x180`}></img>\n      <h2>{robot.name}</h2>\n      <p>{robot.email}</p>\n    </div>\n  );\n};\n\nexport default index;\n","import React from 'react'\nimport \"./style.css\"\nimport Card from \"../card\"\nconst index = ({ robots }) => {\n    return (\n        <div className=\"card-list\">\n            {robots.map(el => (\n                <Card key={el.id} robot={el}></Card>\n            ))}\n        </div>\n    )\n}\n\nexport default index\n","import React from 'react'\nimport \"./style.css\"\nconst index = ({search, onSearch}) => {\n    return (\n        <input \n        className=\"search-box\" \n        type=\"text\" \n        placeholder=\"search robot...\"\n        onChange={onSearch} \n        />\n    )\n}\n\nexport default index\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list\";\nimport SearchBox from \"./components/search-box\";\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  onSearchChanged = (event) => {\n    this.setState({ searchField: event.target.value });\n    // console.log(event.target.value);\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ robots: data }));\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n\n    const filteredRobots = robots.filter((el) =>\n      el.name.toLowerCase().includes(searchField)\n    );\n    return (\n      <div className=\"App\">\n        <h1>Robot list</h1>\n        <SearchBox onSearch={this.onSearchChanged} />\n        <CardList robots={filteredRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}